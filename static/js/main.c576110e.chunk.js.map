{"version":3,"sources":["reportWebVitals.js","components/cards.js","components/cardlist.js","components/SearchBox.js","components/scroll.js","container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Cards","props","React","createElement","className","alt","src","concat","id","name","email","CardList","robots","map","user","i","key","SearchBox","onSearch","typeof","placeholder","onChange","Scrool","style","overflow","border","height","children","App","Component","constructor","super","onSearchChange","event","this","setState","searchfield","target","value","state","componentDidMount","fetch","response","json","users","render","filteredRobots","filter","robot","toLowerCase","includes","length","Scroll","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"sMAYeA,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCMCS,MAXAC,GAEPC,IAAAC,cAAA,OAAKC,UAAU,uDACXF,IAAAC,cAAA,OAAKE,IAAI,aAAaC,IAAG,wBAAAC,OAA0BN,EAAMO,GAAE,mBAC3DN,IAAAC,cAAA,WACID,IAAAC,cAAA,MAAIC,UAAU,0BAA0BH,EAAMQ,MAC9CP,IAAAC,cAAA,UAAKF,EAAMS,SCcZC,MAnBEjB,IAAiB,IAAhB,OAAEkB,GAAQlB,EAC1B,OACEQ,IAAAC,cAAA,WAEIS,EAAOC,IAAI,CAACC,EAAMC,IAEdb,IAAAC,cAACH,EAAK,CACJgB,IAAKD,EACLP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,WCFhBO,MATGvB,IAAgB,IAAf,SAACwB,GAASxB,EACzB,OACIQ,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAOgB,OAAO,SAASC,YAAY,mBAAmBC,SAAUH,MCI7DI,MAPErB,GAETC,IAAAC,cAAA,OAAKoB,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,UAC1DzB,EAAM0B,U,MCEnB,MAAMC,UAAYC,YACdC,cACIC,QAMJ,KACAC,eAAkBC,IACdC,KAAKC,SAAS,CAACC,YAAYH,EAAMI,OAAOC,SAPxCJ,KAAKK,MAAQ,CACT3B,OAAO,GACPwB,YAAY,IAQpBI,oBACIC,MAAM,8CACLhD,KAAKiD,GAAYA,EAASC,QAC1BlD,KAAKmD,IAAUV,KAAKC,SAAS,CAACvB,OAAOgC,MAI1CC,SACI,MAAM,OAAEjC,EAAM,YAAEwB,GAAgBF,KAAKK,MAC/BO,EAAiBlC,EAAOmC,OAAOC,GAC1BA,EAAMvC,KAAKwC,cAAcC,SAASd,EAAYa,gBAEzD,OAAQrC,EAAOuC,OAGXjD,IAAAC,cAAA,OAAKC,UAAU,UACXF,IAAAC,cAAA,MAAIC,UAAU,MAAK,oBACnBF,IAAAC,cAACc,EAAS,CAAEC,SAAUgB,KAAKF,iBAC3B9B,IAAAC,cAACiD,EAAM,KACHlD,IAAAC,cAACQ,EAAQ,CAACC,OAAQkC,MAN1B5C,IAAAC,cAAA,MAAIC,UAAU,MAAK,eAahBwB,Q,MCvCFyB,IAASC,WAAWC,SAASC,eAAe,SACpDX,OACH3C,IAAAC,cAACD,IAAMuD,WAAU,KACfvD,IAAAC,cAACyB,EAAG,QAORtC,K","file":"static/js/main.c576110e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Cards = (props) =>{\r\n    return(\r\n        <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\r\n            <img alt=\"imagemRobo\" src={`https://robohash.org/${props.id}?size=170x180`}/>\r\n            <div>\r\n                <h4 className=\"pointer hover-bg-green\">{props.name}</h4>\r\n                <h5>{props.email}</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Cards;","import React  from 'react';\r\nimport Cards from './cards';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Cards\r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              email={robots[i].email}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({onSearch}) =>{\r\n    return(\r\n        <div>\r\n            <input typeof=\"Search\" placeholder=\"Search Robots...\" onChange={onSearch}/> \r\n\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default SearchBox;\r\n\r\n// onSearch é a props de Searchbox no dir app.js","import React from \"react\";\r\n\r\nconst Scrool =  (props) =>{\r\n    return(\r\n        <div style={{overflow:'scroll',border:'1px solid black',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default Scrool;","import React,{Component} from \"react\";\r\nimport CardList from '../components/cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from \"../components/scroll\";\r\nimport './App.css';\r\n\r\n// when we use the state , is mandatory wu use the class component. / quando usamos o state temos que ultilizar Classes não funções.\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n    //  função que recebe letras do componente de busca do app e verifica mudando o state do app\r\n    onSearchChange = (event)=>{\r\n        this.setState({searchfield:event.target.value})\r\n    }\r\n    // recebendo os dados de api e mudando para aquivos json e ultilizando como state de uma nova matriz.\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => {this.setState({robots:users})})\r\n    }\r\n\r\n    // função que filtra os nomes dos robos na nova matriz state.\r\n    render(){\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length? \r\n            <h1 className=\"tc\"> Loading..</h1>:    \r\n            (   \r\n            <div className=\" tc f3\">\r\n                <h1 className=\"f2\">ROBOFRIENDS #1.0</h1>\r\n                <SearchBox  onSearch={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './container/App';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}